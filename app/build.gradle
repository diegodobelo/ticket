plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

def secretsFile = rootProject.file("secrets.properties")
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsFile))

android {
    namespace 'com.diegodobelo.ticketmaster'
    compileSdk 34

    defaultConfig {
        applicationId "com.diegodobelo.ticketmaster"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_KEY", secretsProperties['apiKey'])
        buildConfigField("String", "BASE_URL", secretsProperties['baseUrl'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }
    kotlinOptions {
        jvmTarget = '18'
    }

    buildFeatures {
        buildConfig = true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.1"
    }
}

dependencies {
    def compose_bom_version = "2023.10.01"
    def room_version = "2.6.0"
    def retrofit_version = "2.9.0"
    def work_version = "2.8.1"
    def accompanist_version = "0.27.0"
    def material_version = "1.10.0"
    def coroutines_version = "1.7.3"
    def core_ktx_version = "1.12.0"
    def view_model_ktx_version = "2.6.2"
    def activity_ktx_version = "1.8.1"
    def hilt_work_version = "1.1.0"
    def hilt_android_version = "2.48"
    def hilt_compiler_version = "2.44"
    def hilt_android_compiler_version = "1.1.0"
    def junit_version = "4.13.2"
    def junit_android_version = "1.1.5"
    def espresso_version = "3.5.1"
    def mockito_version = "4.0.0"
    def mockito_android_version = "5.7.0"
    def nav_version = "2.7.6"
    def coil_version = "2.5.0"

    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation composeBom
    androidTestImplementation composeBom

    // Coil
    implementation "io.coil-kt:coil:$coil_version"
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Compose
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.compose.material3:material3"
    debugImplementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    implementation "androidx.activity:activity-compose"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose"
    implementation "androidx.compose.runtime:runtime-livedata"

    // System UI
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // KTX
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$view_model_ktx_version"
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_android_version"
    implementation "androidx.hilt:hilt-work:$hilt_work_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_compiler_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_android_compiler_version"

    // Work manager
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Tests
    androidTestImplementation "androidx.test.ext:junit:$junit_android_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}

kapt {
    correctErrorTypes true
}